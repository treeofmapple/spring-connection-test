spring:
  cache:
    cache-names: 
      - "rate-limit-bucket"
    caffeine:
      spec: "maximumSize=10000,expireAfterAccess=30m"

  kafka:
    producer:
      bootstrap-servers: ${KAFKA-SERVICE-1}
      client-id: ${PRODUCER-ID}
      topic:
        name: ${KAFKA-TOPIC}

  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_DATABASE:example}

    # ?ssl=false&sslmode=disable
    # ?ssl=true&sslmode=required

    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      max-lifetime: 270000 # 4.5 minutes (in ms)
      idle-timeout: 200000 # 4.1 minutes (should be less than maxLifetime)
      connection-timeout: 10000
      minimum-idle: 2
      maximum-pool-size: 10
      pool-name: "DevDBPool"
      connection-test-query: SELECT 1
  jpa:
    open-in-view: false 
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    hibernate:
      ddl-auto: ${DDL_AUTO:create-drop}
  flyway:
    locations: classpath:db/migration
    enabled: ${FLYWAY:false}
    clean-disabled: ${FLYWAY_CLEAN:false} 
    validate-on-migrate: ${FLYWAY_MIGRATION-VALIDATE:false}
    baseline-on-migrate: ${FLYWAY_MIGRATION-BASELINE:false}
    baseline-version: ${FLYWAY_VERSION:1}
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB
      
application:
  page:
    size: ${PAGE_SIZE:10}
  cors:
    allowed-origins: ${ALLOWED_ORIGINS}
    time: ${CORS_TIME:3600}
  rate:
    limit: ${RATE_LIMIT:20}
    refil:
      time: ${REFIL_TIME:30s}
  data:
    allowed: ${DATA_TYPES}
  endpoints:
    allowed: ${ALLOWED_ENDPOINTS}
# /actuator/**

cloud:
  aws:
    endpoint: ${CLOUDFLARE_ENDPOINT:NONE}
    access-key-id: ${CLOUDFLARE_ACCESS_KEY:NONE}
    secret-access-key: ${CLOUDFLARE_SECRET_KEY:NONE}
    bucket: ${CLOUDFLARE_BUCKET_NAME:NONE}
    region: auto
    ddlAuto: ${CLOUDFLARE_DDL_AUTO:update}
    accelerate-enabled: ${CLOUDFLARE_ACCELERATE:false}
    s3:
      path-style-access-enabled: true

settings:
  security:
    generated:
      user: ${ADMIN_USER}
      email: ${ADMIN_EMAIL}
      password: ${ADMIN_PASSWORD}

